[[_coding_standars_and_best_practices]]
== Coding Standards and Best Practices

Development best practices and coding standards have been included within the connector development community over time, leading to connector quality improvements. During the certification process, most of these practices and standards are checked by automated tools, such as SonarQube.

=== Anypoint™ Connector DevKit Version

The last version of Anypoint™ Connector DevKit must be used to develop your connector. As of August 2016, the latest stable DevKit version is 3.9.0.

DevKit 3.9.0 ensures that a connector will be compatible with Mule ESB 3.5.x, Mule ESB 3.6.x, Mule ESB 3.7.x and Mule ESB 3.8.x. However, external libraries employed by the connector might have conflicts with different Mule ESB versions. Sanity checks are mandatory for every Mule ESB version.

=== Connector Category

A connector should define its category in its POM properties:

[source, xml]
----
<groupId>org.mule.modules</groupId>
<artifactId>mule-module-sample-connector</artifactId>
<version>1.0.0-SNAPSHOT</version>
<name>Mule Sample Connector </name>
<packaging>pom</packaging>

<properties>
    <category>Certified</category>
    <licensePath>LICENSE.md</licensePath>
    <devkit.studio.package.skip>false</devkit.studio.package.skip>
</properties>
----

- For *MuleSoft Certified Connectors* (if you're a partner building a connector, this is your connector's category) DevKit 3.7.2 or above requires you to use *Certified* in the category.
- For *Select* connectors, please use *Select* as the category.
- For *Premium* connectors, please use *Premium* as the category.

Using this as a reference, please use *<category></category>* as the element for indicating the category.

All connectors except *Community* require that you include the *@RequiresEnterpriseLicense* attribute to the connector. In addition, if you are building a *paid* connector as a *MuleSoft Certified* connector, *DevKit 3.8.0 or above* supports https://docs.mulesoft.com/anypoint-connector-devkit/v/3.8/certified-connector-license-management[license validation natively], but you can also use your own license validation mechanism and make sure that you enforce the legal use of your connector in the way you see fit.

_MuleSoft will not be liable for errors in your code that could lead to people using your connector without a proper license._

For *Select* or *MuleSoft Certified Connectors*
[source]
----
@RequiresEnterpriseLicense(allowEval = true)
public class SalesforceConnector {
----
For *Premium Connectors*
[source]
----
@RequiresEnterpriseLicense(allowEval = true)
@RequiresEntitlement(name = "oracleebs-connector")
public class OracleEBSConnector {
----

==== Distribution Management

Configuration of the `distributionManagement` element varies from connector to connector, depending on its category and the project structure.

. Certified:
+
[source, xml]
----
<distributionManagement>
    <repository>
        <id>mule-ee-releases</id>
        <name>MuleEE Releases Repository</name>
        <url>https://repository-master.mulesoft.org/nexus/content/repositories/releases-ee/</url>
    </repository>
    <snapshotRepository>
        <id>mule-ee-snapshots</id>
        <name>MuleEE Snapshots Repository</name>
        <url>https://repository-master.mulesoft.org/nexus/content/repositories/ci-snapshots/</url>
        <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
</distributionManagement>
----
+
. Multi-Module Certified Connector:
+
If a MuleSoft Certified connector is part of a multi-module project, before the release verify that:
+
* The connector's module is deployed to the private nexus (same distribution management as described above for Standard, CI-releases).
* The parent pom and other non-connector modules of the multi-module project have the same distribution management as described above for public or Community connectors.

For example, in a project with a parent pom, a utils module and a connector module, if and only if the connector is Certified, then the parent pom should declare the public distributionManagement, and then it should be overridden in the connectors' pom with the private distributionManagement.

==== Distribution Management Matrix:

[width="100%",frame="topbot",options="header,footer"]
|======================
| Connector Configuration | Certified
| Single Module    |  https://repository-master.mulesoft.org/nexus/content/repositories/releases-ee/
| Multi Module     |  Parent, Utils:
|                  |  http://repository-master.mulesoft.org/releases/
|                  |  Connector:
|                  |  https://repository-master.mulesoft.org/nexus/content/repositories/releases-ee/
|======================

include::sections/1-maven-convention-setup.asc[]
include::sections/2-devkit-standars-best-practices.asc[]
include::sections/3-connector-demo-example.asc[]
include::sections/4-third-party-licenses.asc[]
include::sections/5-connector-icon.asc[]
include::sections/6-license-header.asc[]
